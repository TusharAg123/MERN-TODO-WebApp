{"ast":null,"code":"var _jsxFileName = \"/Users/tushar/Desktop/ToDo/frontend/src/todos/TodoList.js\";\nimport React from 'react';\nimport axios from 'axios'; //import TodoListItem from './TodoListItem';\n//import TodoListForm from './TodoListForm';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      currentTodo: {}\n    };\n    this.updateCurrentTodo = this.updateCurrentTodo.bind(this);\n  }\n\n  componentDidMount() {\n    const url = 'http://localhost:4000/todo';\n    axios.get(url).then(Response => {\n      this.setState({\n        todos: Response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  updateCurrentTodo(item) {\n    this.state({\n      currentTodo: item\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col s3\",\n          children: /*#__PURE__*/_jsxDEV(TodoList, {\n            todos: this.state.todos,\n            updateCurrentTodo: this.updateCurrentTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TodoList; // TodoList's only prop is 'todos', which it is supposed to display\n// <div className....\n// It's going to simply take todos that it gets as a prop\n// For each todo, it's going to display a TodoListItem component","map":{"version":3,"sources":["/Users/tushar/Desktop/ToDo/frontend/src/todos/TodoList.js"],"names":["React","axios","TodoList","Component","constructor","props","state","todos","currentTodo","updateCurrentTodo","bind","componentDidMount","url","get","then","Response","setState","data","catch","error","console","log","item","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIC,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACJ;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,GAAG,GAAG,4BAAZ;AAEAX,IAAAA,KAAK,CAACY,GAAN,CAAUD,GAAV,EACCE,IADD,CACOC,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAc;AACVT,QAAAA,KAAK,EAAEQ,QAAQ,CAACE;AADN,OAAd;AAGH,KALD,EAMCC,KAND,CAMQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KARD;AASH;;AAEDV,EAAAA,iBAAiB,CAACa,IAAD,EAAO;AACpB,SAAKhB,KAAL,CAAW;AACPE,MAAAA,WAAW,EAAEc;AADN,KAAX;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCAAwB,QAAE,QAAF;AAAW,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,KAA7B;AACxB,YAAA,iBAAiB,EAAE,KAAKE;AADA;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAxCkC;;AA2CvC,eAAeP,QAAf,C,CAGA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n//import TodoListItem from './TodoListItem';\n//import TodoListForm from './TodoListForm';\n\nclass TodoList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            todos: [],\n            currentTodo: {},\n         }\n         this.updateCurrentTodo = this.updateCurrentTodo.bind(this);\n    }\n\n    componentDidMount() {\n        const url = 'http://localhost:4000/todo';\n\n        axios.get(url)\n        .then((Response) => {\n            this.setState({\n                todos: Response.data\n            })\n        })\n        .catch((error) => {\n            console.log(error)\n        });\n    };\n\n    updateCurrentTodo(item) {\n        this.state({\n            currentTodo: item,\n        })\n    }\n\n    render() { \n        return ( \n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col s3\">< TodoList todos={this.state.todos}\n                    updateCurrentTodo={this.updateCurrentTodo} />\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default TodoList;\n\n\n// TodoList's only prop is 'todos', which it is supposed to display\n// <div className....\n// It's going to simply take todos that it gets as a prop\n// For each todo, it's going to display a TodoListItem component\n"]},"metadata":{},"sourceType":"module"}