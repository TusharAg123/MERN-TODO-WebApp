{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","getAll","axios","get","then","res","star","unstar","i","data","length","filter","t","starred","final","setState","todos","catch","error","console","log","state","this","e","preventDefault","post","name","refs","value","todoItem","id","delete","put","editName","editTodoItem","className","onSubmit","todoSubmit","bind","ref","type","htmlFor","map","item","Date","date","toLocaleDateString","onClick","todoDelete","_id","todoStar","todoEdit","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a905cf41.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(props) {\n\n    super(props);\n    this.state = { \n        todos: []\n     }\n}\n\ncomponentDidMount() {\n    this.getAll();\n}\n\ngetAll = () => {\n    axios.get('http://localhost:4000/todo')\n\n        .then((res) => {\n\n            let star, unstar;\n\n            for (let i = 0; i < res.data.length; i++) {\n                star = res.data.filter(t => t.starred === true);\n                unstar = res.data.filter(t => t.starred === false);\n            }\n\n            let final = [...star, ...unstar];\n\n            this.setState({\n                todos: final\n            })\n        })\n\n        .catch((error) => {\n            console.log(error)\n        })\n}\n\ntodoSubmit(e) {\n    e.preventDefault();\n\n    axios.post('http://localhost:4000/todo', {\n        name: this.refs.name.value,\n        todoItem: this.refs.todoItem.value,\n    })\n\n    .then((res) => {\n        this.getAll();\n        console.log(res);\n    })\n\n    .catch((error) => {\n        this.getAll();\n        console.log(error);\n    })\n}\n\ntodoDelete(id, e) {\n    e.preventDefault();\n\n    axios.delete(`http://localhost:4000/todo/${id}`)\n      \n    .then(res => {\n        console.log(res.data);\n        this.getAll();\n    })\n\n    .catch((error) => {\n        console.log(error);\n        this.getAll();\n    })\n}\n\ntodoEdit(id, e) {\n    e.preventDefault();\n\n    axios.put(`http://localhost:4000/todo/${id}`, {\n        editName: this.refs.editName.value,\n        editTodoItem: this.refs.editTodoItem.value\n    })\n\n    .then((res) => {\n        console.log(res);\n        this.getAll();\n    })\n\n    .catch((error) => {\n        console.log(error);\n        this.getAll();\n    });\n}\n\ntodoStar(id, e) {\n    e.preventDefault();\n\n    axios.post(`http://localhost:4000/todo/${id}/toggleStar`,{\n        starred: this.state.starred\n    })\n\n    .then((res) => {\n        console.log(res);\n        this.getAll();\n    })\n\n    .catch((error) => {\n        console.log(error);\n        this.getAll();\n    });\n}\n\nrender() { \n    return ( \n        <div className=\"container\">\n            <h1 className=\"center card-panel teal lighten-2\">ToDo Web App</h1>\n            <div className=\"col s12 m4\">\n                <div className=\"row\">\n                    <form className=\"col s12\" onSubmit={this.todoSubmit.bind(this)}>\n                        <div className=\"row\">\n                        <div className=\"input-field col s6\">\n                            <input id=\"name\" ref=\"name\" type=\"text\"/>\n                            <label htmlFor=\"name\">Name</label>\n                        </div>\n                        </div>\n                        <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"todoItem\" ref=\"todoItem\" type=\"text\"/>\n                            <label htmlFor=\"todoItem\">Add New Todo</label>\n                        </div>\n                        </div>\n                        <button className=\"btn-floating material-icons btn-danger\" type=\"submit\" name=\"action\">+</button>\n                    </form>\n                </div>\n            </div>\n            <div className=\"col s3\">\n                <ul className=\"collection with-header\">\n                    <li className=\"collection-header\"><h5>Todos</h5></li>\n\n                    {this.state.todos.map((item) => (\n\n                        <div className=\"collection-item\" key={item._id}>\n                            Name: {item.name} <br/> \n                            Todo: {item.todoItem} <br/> \n                            Date: {new Date(item.date).toLocaleDateString()} <br/>\n\n                            <button className=\"btn-floating material-icons btn-danger\" onClick={(e) => this.todoDelete(item._id, e)}>delete</button> &nbsp;\n                            <button className=\"btn-floating  material-icons btn-danger\" onClick={(e) => this.todoStar(item._id, e)}>{item.starred ? 'star' : 'star_border'}</button> <br/>\n\n                                <div className=\"input-field\">\n                                    <input id=\"editName\" ref=\"editName\" type=\"text\"/>\n                                    <label htmlFor=\"editName\">Edit Name</label>\n                                </div>\n                                \n                                <div className=\"input-field\">\n                                    <input id=\"editTodoItem\" ref=\"editTodoItem\" type=\"text\"/>\n                                    <label htmlFor=\"editTodoItem\">Edit Todo</label>\n                                </div>\n                                \n                            <button className=\"btn-floating material-icons btn-danger right\" onClick={(e) => this.todoEdit(item._id, e)}>edit</button> \n                            <br/>\n                            <br/>\n                        </div>\n                    ))}\n                </ul>\n            </div>\n        </div>\n     );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}